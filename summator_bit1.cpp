#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{
   printf("\nОднобитный сумматор двоичная система результат двухбитный массив, двухбитный регистр, два эллемента\n\
Описание работы\n\
\n\
  Число0 Число1 результат0_1  \n\
А 0      0      0 (00)   Если Число0 == 0, а Число1 == 0, тогда 00\n\
Б 0      1      1 (01)   Если Число0 == 0, а Число1 == 1, тогда 01\n\
В 1      0      1 (01)   Если Число0 == 1, а Число1 == 0, тогда 01\n\
Г 1      1      2 (10)   Если Число0 == 1, а Число1 == 1, тогда 10\n\
");

printf("\nПроверка работы\n\
");

int test_summator_bit1[2] = {0, 1};

for (int i = 0; i < 2; i++)
  for (int j = 0; j < 2; j++)
  {
	int Число0 = test_summator_bit1[i];
	int Число1 = test_summator_bit1[j];

    int логическое_объединение1 = Число0 | Число1;
    int логическое_умножение1 = Число0 & Число1;
    int логическая_инверсия1 = !(логическое_умножение1);
    int логическое_умножение2 = (логическая_инверсия1) & (логическое_объединение1);
    int result =  ((логическое_умножение1) << 1) | (логическое_умножение2);
	
	printf("\n  %d      %d      %d (%d%d)", Число0, Число1, result, логическое_умножение1, логическое_умножение2);
  }

  //оптимизация
  printf("\nПроверка работы - оптимизация\n\
");
  for (int i = 0; i < 2; i++)
  for (int j = 0; j < 2; j++)
  {
	int Число0 = test_summator_bit1[i];
	int Число1 = test_summator_bit1[j];

    int логическое_объединение1 = Число0 | Число1;
    int логическое_умножение1 = Число0 & Число1;
    int логическое_умножение2 = (логическое_объединение1) & (логическое_умножение1);
    int логическое_объединение2 = (логическое_объединение1) | (логическое_умножение1);
	int логическая_инверсия1 = !(логическое_умножение2);
    int логическое_умножение3 = (логическая_инверсия1) & (логическое_объединение2);
    int result =  ((логическое_умножение2) << 1) | (логическое_умножение3);
	
	printf("\n  %d      %d      %d (%d%d)", Число0, Число1, result, логическое_умножение2, логическое_умножение3);
  }
  
  return 0;
}